:root {
    --text-color: black;
    --field-background: white;
    --highlight-foreground: white;
}

@layer button {
    .react-aria-Button {
        color: var(--text-color);
        background: var(--button-background);
        border: 1px solid okch(var(--pc));
        -webkit-appearance: none;
        appearance: none;
        vertical-align: middle;
        text-align: center;
        border-radius: 4px;
        outline: none;
        margin: 0;
        padding: 6px 10px;
        font-size: 1rem;
        text-decoration: none
    }

    .react-aria-Button[data-pressed] {
        background: var(--button-background-pressed);
        border-color: okch(var(--pc));
        box-shadow: inset 0 1px 2px #0000001a
    }

    .react-aria-Button[data-focus-visible] {
        outline: 2px solid okch(var(--pc));
        outline-offset: -1px
    }

    .react-aria-Button[data-disabled] {
        border-color: okch(var(--pc));
        color: var(--text-color-disabled)
    }
}

@layer popover {
    .react-aria-Popover {
        --background-color: var(--overlay-background);
        border: 1px solid okch(var(--pc));
        background: var(--background-color);
        color: var(--text-color);
        border-radius: 6px;
        outline: none;
        max-width: 250px;
        box-shadow: 0 8px 20px #0000001a
    }

    .react-aria-Popover .react-aria-OverlayArrow svg {
        fill: var(--background-color);
        stroke: okch(var(--pc));
        stroke-width: 1px;
        display: block
    }

    .react-aria-Popover[data-placement=top] {
        --origin: translateY(8px)
    }

    .react-aria-Popover[data-placement=top]:has(.react-aria-OverlayArrow) {
        margin-bottom: 6px
    }

    .react-aria-Popover[data-placement=bottom] {
        --origin: translateY(-8px)
    }

    .react-aria-Popover[data-placement=bottom]:has(.react-aria-OverlayArrow) {
        margin-top: 6px
    }

    .react-aria-Popover[data-placement=bottom] .react-aria-OverlayArrow svg {
        transform: rotate(180deg)
    }

    .react-aria-Popover[data-placement=right] {
        --origin: translateX(-8px)
    }

    .react-aria-Popover[data-placement=right]:has(.react-aria-OverlayArrow) {
        margin-left: 6px
    }

    .react-aria-Popover[data-placement=right] .react-aria-OverlayArrow svg {
        transform: rotate(90deg)
    }

    .react-aria-Popover[data-placement=left] {
        --origin: translateX(8px)
    }

    .react-aria-Popover[data-placement=left]:has(.react-aria-OverlayArrow) {
        margin-right: 6px
    }

    .react-aria-Popover[data-placement=left] .react-aria-OverlayArrow svg {
        transform: rotate(-90deg)
    }

    .react-aria-Popover[data-entering] {
        animation: .2s popover-slide
    }

    .react-aria-Popover[data-exiting] {
        animation: .2s ease-in reverse popover-slide
    }

    @keyframes popover-slide {
        0% {
            transform: var(--origin);
            opacity: 0
        }

        to {
            opacity: 1;
            transform: translateY(0)
        }
    }
}

@layer dialog {
    .react-aria-Dialog {
        @apply bg-white;
        max-height: inherit;
        box-sizing: border-box;
        outline: none;
        padding: 30px;
        overflow: auto
    }

    .react-aria-Dialog .react-aria-Heading[slot=title] {
        margin-top: 0;
        line-height: 1em
    }
}

@layer datefield {
    .react-aria-DateField {
        color: var(--text-color)
    }

    .react-aria-DateInput {
        border: 1px solid okch(var(--pc));
        background: var(--field-background);
        white-space: nowrap;
        forced-color-adjust: none;
        border-radius: 6px;
        width: fit-content;
        min-width: 150px;
        padding: 4px;
        display: flex
    }

    .react-aria-DateInput[data-focus-within] {
        outline: 2px solid okch(var(--pc));
        outline-offset: -1px
    }

    .react-aria-DateSegment {
        @apply text-black;
        font-variant-numeric: tabular-nums;
        text-align: end;
        padding: 0 2px
    }

    .react-aria-DateSegment[data-type=literal] {
        padding: 0
    }

    .react-aria-DateSegment[data-placeholder] {
        color: var(--text-color-placeholder);
        font-style: italic
    }

    .react-aria-DateSegment:focus {
        @apply text-white bg-primary;
        caret-color: #0000;
        border-radius: 4px;
        outline: none
    }

    .react-aria-DateSegment[data-invalid] {
        @apply text-gray-600;
    }

    .react-aria-DateSegment[data-invalid]:focus {
        @apply text-gray-600 bg-primary/50;
    }

    .react-aria-DateField .react-aria-FieldError {
        @apply text-gray-600;
        font-size: 12px
    }

    .react-aria-DateField [slot=description] {
        font-size: 12px
    }

    fieldset {
        width: fit-content;
        padding: 1.5em
    }

    .invalid {
        @apply text-gray-600;
        margin-top: 1em;
        display: block
    }
}

@layer rangecalendar {
    .react-aria-RangeCalendar {
        @apply text-black;
        width: fit-content;
        max-width: 100%
    }

    .react-aria-RangeCalendar header {
        align-items: center;
        margin: 0 4px .5rem;
        display: flex
    }

    .react-aria-RangeCalendar header .react-aria-Heading {
        text-align: center;
        flex: 1;
        margin: 0;
        font-size: 1.375rem
    }

    .react-aria-RangeCalendar .react-aria-Button {
        width: 2rem;
        height: 2rem;
        padding: 0
    }

    .react-aria-RangeCalendar table {
        border-collapse: collapse
    }

    .react-aria-RangeCalendar table td {
        padding: 2px 0
    }

    .react-aria-RangeCalendar .react-aria-CalendarCell {
        text-align: center;
        cursor: default;
        forced-color-adjust: none;
        border-radius: 6px;
        outline: none;
        width: 2.286rem;
        line-height: 2.286rem
    }

    .react-aria-RangeCalendar .react-aria-CalendarCell[data-outside-month] {
        display: none
    }

    .react-aria-RangeCalendar .react-aria-CalendarCell[data-pressed] {
        @apply bg-gray-200;
    }

    .react-aria-RangeCalendar .react-aria-CalendarCell[data-focus-visible] {
        @apply outline-2 outline-primary -outline-offset-2;
    }

    .react-aria-RangeCalendar .react-aria-CalendarCell[data-selected] {
        @apply bg-primary text-white;
        border-radius: 0
    }

    .react-aria-RangeCalendar .react-aria-CalendarCell[data-selected][data-focus-visible] {
        outline-color: var(--highlight-foreground);
        outline-offset: -3px
    }

    .react-aria-RangeCalendar .react-aria-CalendarCell[data-selection-start] {
        border-start-start-radius: 6px;
        border-end-start-radius: 6px
    }

    .react-aria-RangeCalendar .react-aria-CalendarCell[data-selection-end] {
        border-start-end-radius: 6px;
        border-end-end-radius: 6px
    }

    .react-aria-RangeCalendar .react-aria-CalendarCell[data-disabled] {
        color: var(--text-color-disabled)
    }

    .react-aria-RangeCalendar .react-aria-CalendarCell[data-unavailable] {
        color: var(--invalid-color);
        text-decoration: line-through
    }

    .react-aria-RangeCalendar .react-aria-CalendarCell[data-invalid] {
        background: var(--invalid-color);
        color: var(--highlight-foreground)
    }

    .react-aria-RangeCalendar [slot=errorMessage] {
        color: var(--invalid-color);
        font-size: 12px
    }

    .calendar-picker>.react-aria-Button {
        margin: 0 4px 8px
    }
}

@layer form {
    .react-aria-Form {
        flex-direction: column;
        align-items: start;
        gap: 8px;
        display: flex
    }

    .react-aria-Form [role=alert] {
        border: 2px solid var(--invalid-color);
        background: var(--overlay-background);
        border-radius: 6px;
        outline: none;
        max-width: 250px;
        padding: 12px
    }

    .react-aria-Form [role=alert]:focus-visible {
        outline: 2px solid okch(var(--pc));
        outline-offset: 2px
    }

    .react-aria-Form [role=alert] h3 {
        margin-top: 0
    }

    .react-aria-Form [role=alert] p {
        margin-bottom: 0
    }
}

.react-aria-DateRangePicker {
    color: var(--text-color)
}

.react-aria-DateRangePicker .react-aria-Group {
    @apply input input-bordered;
    /* box-sizing:border-box; */
    /* border:1px solid okch(var(--pc)); */
    /* background:var(--field-background); */
    /* white-space:nowrap; */
    /* border-radius:6px; */
    align-items: center;
    /* width:fit-content; */
    min-width: 225px;
    max-width: 100%;
    padding: 4px 4px 4px 8px;
    display:flex;
    /* position:relative; */
    /* overflow:auto; */
}

.react-aria-DateRangePicker .react-aria-Group[data-pressed] {
    box-shadow: none;
    background: okch(var(--pc))
}

.react-aria-DateRangePicker .react-aria-Group[data-focus-within] {
    outline: 2px solid okch(var(--pc));
    outline-offset: -1px
}

.react-aria-DateRangePicker [slot=start]+span {
    padding: 0 4px
}

.react-aria-DateRangePicker [slot=end] {
    flex: 1;
    margin-right: 2rem
}

.react-aria-DateRangePicker .react-aria-Button {
    @apply btn-xs btn-outline;
    width: 1.429rem;
    height: 1.429rem;
    margin-left: auto;
    padding: 0;
    font-size: .857rem;
    position: sticky;
    right: 0
}

.react-aria-DateRangePicker .react-aria-Button[data-focus-visible] {
    outline: 2px solid okch(var(--pc));
    outline-offset: 2px
}

.react-aria-DateRangePicker .react-aria-DateInput {
    width: unset;
    min-width: unset;
    padding: unset;
    border: unset;
    outline: unset
}

.react-aria-Popover[data-trigger=DateRangePicker] {
    max-width: unset
}

.react-aria-DateRangePicker[data-invalid] [slot=end]:after {
    content: "ðŸš«" /"";
    content: "ðŸš«";
    alt: " ";
    text-align: end;
    flex: 1;
    margin-left: 1.5rem;
    margin-right: -1.5rem
}

.react-aria-DateRangePicker .react-aria-FieldError {
    color: var(--invalid-color);
    font-size: 12px
}

.react-aria-DateRangePicker [slot=description] {
    font-size: 12px
}

fieldset {
    width: fit-content;
    padding: 1.5em
}

.invalid {
    color: var(--invalid-color);
    margin-top: 1em;
    display: block
}

.clear-button {
    vertical-align: middle;
    text-align: center;
    color: #fff;
    background: gray;
    border: none;
    border-radius: 1.143rem;
    outline: none;
    width: 1.143rem;
    height: 1.143rem;
    padding: 0;
    font-size: .857rem;
    line-height: .857rem
}

.clear-button[data-pressed] {
    background: #696969
}

.clear-button[data-focus-visible] {
    outline: 2px solid okch(var(--pc));
    outline-offset: 2px
}

.clear-button+.react-aria-Button {
    margin-left: 4px
}